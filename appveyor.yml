# http://www.appveyor.com/docs/appveyor-yml

image:
- Visual Studio 2017

# version format
version: 1.0.2.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}
environment:
  rc_version: 1.0.2-RC{build}
  base_version: 1.0.2

# branches to build
branches:
  # whitelist
  only:
    - master
    - dev

# Do not build on tags (GitHub only)
skip_tags: true

os: Visual Studio 2019
install:
  - set PATH=C:\Program Files (x86)\MSBuild\16.0\Bin;%PATH%
 
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: $(base_version)-RC{build}
  assembly_version: $(base_version)
  file_version: '{version}'
  informational_version: '{version}'
 
# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

before_build:
  - nuget restore
  - nuget install NUnit.Console -OutputDirectory packages -ExcludeVersion
  - nuget install OpenCover -OutputDirectory packages -ExcludeVersion
#  - nuget install OpenCover -OutputDirectory packages -Version 4.7.1221
  - nuget install codecov -OutputDirectory packages

build:
  parallel: true                  # enable MSBuild parallel builds
  project: Broadcast.sln      # path to Visual Studio solution or project
#  publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
#  publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
#  publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

# MSBuild verbosity level
# verbosity: quiet|minimal|normal|detailed
  
  
  
  
#---------------------------------#
#       tests configuration       #
#---------------------------------#

test:
  # assemblies to test - optional
  assemblies:
    only:
      - '**\*.Test.dll'
#    only:
#      - '**\Broadcast.Test.dll'
#      - '**\Broadcast.Storage.Redis.Test.dll'
#      - '**\Broadcast.Dashboard.Test.dll'

  categories:
    except:
      - Integration
#      - E2E

#  categories:
#    - UI
#    - E2E

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job

# scripts to run before tests
before_test:
#  - echo script1
#  - ps: Write-Host "script1"

# scripts to run after tests
after_test:
  
# to run your custom scripts instead of automatic tests
test_script:
#  - echo This is my custom test script
  - packages\OpenCover\tools\OpenCover.Console.exe -register:user -target:"packages\NUnit.ConsoleRunner\tools\nunit3-console.exe" -targetargs:"src\Tests\Broadcast.Test\bin\Release\netcoreapp3.1\Broadcast.Test.dll" -output:"broadcaster_coverage.xml" -filter:"+[Test*]*"
  - packages\codecov -f "broadcaster_coverage.xml"
# to disable automatic tests 
#test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  - path: src\Broadcast\bin\Release\netstandard2.0\Broadcast.dll
    name: Broadcast.dll
  - path: src\Broadcast.Dashboard\bin\Release\netstandard2.0\Broadcast.Dashboard.dll
    name: Broadcast.Dashboard.dll

  # pushing all *.nupkg files in directory
  - path: '.\*.nupkg'