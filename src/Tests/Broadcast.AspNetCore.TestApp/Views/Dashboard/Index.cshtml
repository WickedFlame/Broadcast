@using Broadcast.EventSourcing
@model DashboardModel

@{
	ViewData["Title"] = "Custom Dashboard";
	Layout = "_Layout";
}

<div class="">
	<div class="broadcast-section">
		<div class="broadcast-recap-section">
			<div class="broadcast-recap-section-item">
				<div>
					<h4>Servers</h4>
				</div>
				<div>
					<span id="broadcast-servers-count">
						@Model.Monitor.Servers.Count()
					</span>
				</div>
			</div>
			<div class="broadcast-recap-section-item">
				<div>
					<h4>Recurring Tasks</h4>
				</div>
				<div>
					<span id="broadcast-recurring-count">
						@Model.Monitor.RecurringTasks.Count()
					</span>
				</div>
			</div>
			<div class="broadcast-recap-section-item">
				<div>
					<h4>Tasks total</h4>
				</div>
				<div>
					<span id="broadcast-tasks-count">
						@Model.Monitor.RecurringTasks.Count()
					</span>
				</div>
			</div>
			<div class="broadcast-recap-section-item">
				<div>
					<h4>Enqueued Tasks</h4>
				</div>
				<div>
					<span id="broadcast-enqueued-count">
						@Model.Monitor.Tasks.Count(t => t.State != TaskState.Processed && t.State != TaskState.Faulted)
					</span>
				</div>
			</div>
			<div class="broadcast-recap-section-item">
				<div>
					<h4>Processed Tasks</h4>
				</div>
				<div>
					<span id="broadcast-processed-count">
						@Model.Monitor.Tasks.Count(t => t.State == TaskState.Processed)
					</span>
				</div>
			</div>
			<div class="broadcast-recap-section-item">
				<div>
					<h4>Failed Tasks</h4>
				</div>
				<div>
					<span id="broadcast-failed-count">
						@Model.Monitor.Tasks.Count(t => t.State == TaskState.Faulted)
					</span>
				</div>
			</div>
		</div>
	</div>
	<div class="broadcast-section">
		<div class="broadcast-section-header">
			<div>
				<h3>Servers</h3>
			</div>
		</div>
		<table class="broadcast-table" id="serverlist">
			<thead>
				<tr>
					<th scope="col">Name</th>
					<th scope="col">Heartbeat</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var server in Model.Monitor.Servers)
				{
					<tr class="broadcast-table-row">
						<td><span>@server.Name</span>:<span>@server.Id</span> </td>
						<td id="serverheartbeat_@server.Id">@server.Heartbeat.ToString("yyyy-MM-dd HH:mm:ss")</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<div class="broadcast-section">
		<div class="broadcast-section-header">
			<div>
				<h3>Recurring Tasks</h3>
			</div>
		</div>
		<table class="table broadcast-table" id="recurringlist">
			<thead>
				<tr>
					<th scope="col">Name</th>
					<th scope="col">Referenced TaskId</th>
					<th scope="col">NextExecution</th>
					<th scope="col">Interval</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var task in Model.Monitor.RecurringTasks)
				{
					var name = task.Name.Replace(".", "_");
					<tr class="broadcast-table-row" id="recurring_@(name)">
						<td>@task.Name</td>
						<td id="referenceid_@(name)">@task.ReferenceId</td>
						<td id="nextexecution_@(name)">@task.NextExecution.ToString("yyyy-MM-dd HH:mm:ss")</td>
						<td>@(task.Interval != null ? TimeSpan.FromMilliseconds(task.Interval.Value).ToString("hh\\:mm\\:ss\\.fff") : string.Empty)</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<div class="broadcast-section">
		<div class="broadcast-section-header">
			<div>
				<h3>Tasks</h3>
			</div>
		</div>
		<table class="table broadcast-table" id="tasklist">
			<thead>
				<tr>
					<th scope="col">Id</th>
					<th scope="col">Name</th>
					<th scope="col">State</th>
					<th scope="col">IsRecurring</th>
					<th scope="col">Interval</th>
					<th scope="col">Server</th>
					<th scope="col">Started</th>
					<th scope="col">Duration</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var task in Model.Monitor.Tasks)
				{
					<tr class="broadcast-table-row" data-task-id="@task.Id" id="task_@(task.Id)">
						<td>@task.Id</td>
						<td>@task.Name</td>
						<td id="state_@(task.Id)">@task.State</td>
						<td>@task.IsRecurring</td>
						<td>@(task.Time != null ? TimeSpan.FromMilliseconds(task.Time.Value).ToString("hh\\:mm\\:ss\\.fff") : string.Empty)</td>
						<td id="server_@(task.Id)">@task.Server</td>
						<td id="start_@(task.Id)">@task.Start?.ToString("yyyy-MM-dd HH:mm:ss")</td>
						<td id="duration_@(task.Id)">@task.Duration</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>



