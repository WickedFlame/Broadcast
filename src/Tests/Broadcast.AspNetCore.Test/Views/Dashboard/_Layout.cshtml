<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Broadcast.AspNetCore.Test</title>
    <link href="~/css/Dashboard.min.css" rel="stylesheet" type="text/css" />
    @await RenderSectionAsync("Styles", false)
</head>
<body>
	<div class="broadcast-dashboard">
		<partial name="_Navigation" model="@Model"/>
		<div class="broadcast-main-container">
			<div class="broadcast-main-header broadcast-header">
				<span>@ViewData["Title"]</span>
			</div>
			<div class="broadcast-main">
				<main role="main">
					@RenderBody()
				</main>
			</div>
		</div>
		
		<div id="broadcast-data-overlay" class="broadcast-data-overlay">
			<div class="broadcast-data-overlay-container">
				<div class="broadcast-storage-type">
					<div class="broadcast-storage-type-header">
						<div id="broadcast-overlay-close-btn" class="broadcast-overlay-close-btn"></div>
						@*<span class="broadcast-overlay-title" id="broadcast-data-key">Add the name of the task here (key)</span>*@
						<div class="broadcast-overlay-title">
							<h3><span id="broadcast-data-title">Title</span> : <span id="broadcast-data-key">Key</span></h3>
						</div>
						</div>
					<div class="broadcast-storage-type-content" id="broadcast-data-table">
				
					</div>
				</div>
			</div>
		</div>

	</div>

	@await RenderSectionAsync("Scripts", required: false)

<script>
	var dashboardConfig = {
		@*pollUrl: "@(Url.To("/dashboard/metrics"))",*@
		pollUrl: "/dashboard/metrics",
		//TODO: /broadcast/ has to be able to be appended as configuration
		dataUrl: "/broadcast/dashboard/data",
		pollInterval: 2000
	}
</script>
<script src="/js/broadcast-dashboard.js" type="module"></script>

</body>
</html>
